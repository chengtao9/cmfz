<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
         
     <context:component-scan base-package="com.baizhi.entity"/>
     <context:component-scan base-package="com.baizhi.service"/>
     <context:component-scan base-package="com.baizhi.aop"/>


     <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
          <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
          <property name="url" value="jdbc:mysql://localhost:3306/cmfz"/>
          <property name="username" value="root"/>
          <property name="password" value="root"/>
     </bean>

     <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
          <property name="dataSource" ref="dataSource"/>
          <property name="typeAliasesPackage" value="com.baizhi.entity"/>
          <property name="mapperLocations" value="classpath:/mapper/*Mapper.xml"/>
     </bean>

     <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
          <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
          <property name="basePackage" value="com.baizhi.dao"/>
     </bean>

     <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
          <property name="dataSource" ref="dataSource"/>
     </bean>
     <bean id="advice" class="com.baizhi.aop.LogAdvice"></bean>
     <!--组装切面-->
     <!--声明创建代理类的方式为jdk 基于接口 false-->
     <!--声明创建代理类的方式为cglib 基于实现类 true-->

     <!--annotation做切入点 注意1.注解放置在实现类上 2.生成动态代理方式为cglib-->
     <aop:config proxy-target-class="true">
          <aop:pointcut id="pc" expression="@annotation(com.baizhi.annonation.LogAnnotation)"></aop:pointcut>
          <aop:advisor advice-ref="advice" pointcut-ref="pc"></aop:advisor>
     </aop:config>
     <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
</beans>
